@font-face {
  font-family: "IconFont";
  src: url('/assets/IconFont.eot');
  src: url('/assets/IconFont.eot?#iefix') format('eot'),
    url('/assets/IconFont.woff') format('woff'),
    url('/assets/IconFont.ttf') format('truetype'),
    url('/assets/IconFont.svg#IconFont') format('svg');
}

@mixin icon-styles {
  font-family: "IconFont";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
  text-decoration: none;
  text-transform: none;
  vertical-align: middle;
}

%icon {
  @include icon-styles;
}

@function icon-char($filename) {
  $char: "";

  @if $filename == academy {
    $char: "\E001";
  }
  @if $filename == bolt {
    $char: "\E002";
  }
  @if $filename == event {
    $char: "\E003";
  }
  @if $filename == foundation {
    $char: "\E004";
  }
  @if $filename == gov {
    $char: "\E005";
  }
  @if $filename == incubator {
    $char: "\E006";
  }
  @if $filename == location {
    $char: "\E007";
  }
  @if $filename == magnifier {
    $char: "\E008";
  }
  @if $filename == star {
    $char: "\E009";
  }
  @if $filename == vcfund {
    $char: "\E00A";
  }

  @return $char;
}

@mixin icon($filename, $insert: before, $extend: true) {
  &:#{$insert} {
    @if $extend {
      @extend %icon;
    } @else {
      @include icon-styles;
    }
    content: icon-char($filename);
  }
}

.icon-academy {
  @include icon(academy);
}
.icon-bolt {
  @include icon(bolt);
}
.icon-event {
  @include icon(event);
}
.icon-foundation {
  @include icon(foundation);
}
.icon-gov {
  @include icon(gov);
}
.icon-incubator {
  @include icon(incubator);
}
.icon-location {
  @include icon(location);
}
.icon-magnifier {
  @include icon(magnifier);
}
.icon-star {
  @include icon(star);
}
.icon-vcfund {
  @include icon(vcfund);
}